# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class InlineObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_name=None, event_message=None):  # noqa: E501
        """InlineObject - a model defined in OpenAPI

        :param cluster_name: The cluster_name of this InlineObject.  # noqa: E501
        :type cluster_name: str
        :param event_message: The event_message of this InlineObject.  # noqa: E501
        :type event_message: str
        """
        self.openapi_types = {
            'cluster_name': str,
            'event_message': str
        }

        self.attribute_map = {
            'cluster_name': 'cluster_name',
            'event_message': 'event_message'
        }

        self._cluster_name = cluster_name
        self._event_message = event_message

    @classmethod
    def from_dict(cls, dikt) -> 'InlineObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_object of this InlineObject.  # noqa: E501
        :rtype: InlineObject
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_name(self):
        """Gets the cluster_name of this InlineObject.


        :return: The cluster_name of this InlineObject.
        :rtype: str
        """
        return self._cluster_name

    @cluster_name.setter
    def cluster_name(self, cluster_name):
        """Sets the cluster_name of this InlineObject.


        :param cluster_name: The cluster_name of this InlineObject.
        :type cluster_name: str
        """

        self._cluster_name = cluster_name

    @property
    def event_message(self):
        """Gets the event_message of this InlineObject.


        :return: The event_message of this InlineObject.
        :rtype: str
        """
        return self._event_message

    @event_message.setter
    def event_message(self, event_message):
        """Sets the event_message of this InlineObject.


        :param event_message: The event_message of this InlineObject.
        :type event_message: str
        """

        self._event_message = event_message
